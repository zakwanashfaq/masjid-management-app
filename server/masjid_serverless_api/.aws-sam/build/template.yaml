AWSTemplateFormatVersion: '2010-09-09'
Description: API definition for the masjid_serverless_api masjid_serverless_api
Transform:
- AWS::Serverless-2016-10-31
Resources:
  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: MyLambdaRequestAuthorizer
        Authorizers:
          MyLambdaRequestAuthorizer:
            FunctionArn:
              Fn::GetAtt:
              - ValidateTokenAuthorizer
              - Arn
            Identity:
              Header: Authorization
              ValidationExpression: Bearer.*
  getAllItemsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-all-items.getAllItemsHandler
      Runtime: nodejs18.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from
        a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET
      CodeUri: getAllItemsFunction
    Metadata:
      SamResourceId: getAllItemsFunction
  loginFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/auth/login.loginWithUsernamePassword
      Runtime: nodejs18.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 30
      Description: A simple example includes a HTTP get method to get all items from
        a DynamoDB table.
      Events:
        Api:
          Type: Api
          Properties:
            Path: /login
            Method: POST
      CodeUri: loginFunction
    Metadata:
      SamResourceId: loginFunction
  signUpFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/auth/signup.signUpWithUsernamePassword
      Runtime: nodejs18.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 30
      Description: A simple example includes a HTTP get method to get all items from
        a DynamoDB table.
      Events:
        Api:
          Type: Api
          Properties:
            Path: /signup
            Method: POST
      CodeUri: signUpFunction
    Metadata:
      SamResourceId: signUpFunction
  getByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-by-id.getByIdHandler
      Runtime: nodejs18.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get one item by
        id from a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{id}
            Method: GET
      CodeUri: getByIdFunction
    Metadata:
      SamResourceId: getByIdFunction
  putItemFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/put-item.putItemHandler
      Runtime: nodejs18.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP post method to add one item to
        a DynamoDB table.
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SampleTable
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: POST
      CodeUri: putItemFunction
    Metadata:
      SamResourceId: putItemFunction
  ValidateTokenAuthorizer:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/auth/authorizer.handler
      Runtime: nodejs14.x
      Events:
        Authorizer:
          Type: Api
          Properties:
            Path: /authorizer
            Method: POST
      CodeUri: ValidateTokenAuthorizer
    Metadata:
      SamResourceId: ValidateTokenAuthorizer
  SampleTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
Globals:
  Function:
    LoggingConfig:
      LogFormat: JSON
