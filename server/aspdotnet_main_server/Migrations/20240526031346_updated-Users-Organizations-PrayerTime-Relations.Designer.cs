// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using aspdotnet_main_server.db;

#nullable disable

namespace aspdotnetmainserver.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240526031346_updated-Users-Organizations-PrayerTime-Relations")]
    partial class updatedUsersOrganizationsPrayerTimeRelations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("aspdotnet_main_server.Entities.EventModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("OrganizationModelId")
                        .HasColumnType("uuid");

                    b.Property<string>("createdBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("createdOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("eventDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("eventDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("eventName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationModelId");

                    b.ToTable("EventModels");
                });

            modelBuilder.Entity("aspdotnet_main_server.Entities.OrganizationModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OrganizationName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OrganizationModel");
                });

            modelBuilder.Entity("aspdotnet_main_server.Entities.PrayerTimesModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DelayInMinutes")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("OrganizationModelId")
                        .HasColumnType("uuid");

                    b.Property<TimeOnly>("SpecificPrayerTime")
                        .HasColumnType("time without time zone");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationModelId");

                    b.ToTable("PrayerTimeModel");
                });

            modelBuilder.Entity("aspdotnet_main_server.Entities.UserModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("OrganizationModelId")
                        .HasColumnType("uuid");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationModelId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("UserModels");
                });

            modelBuilder.Entity("aspdotnet_main_server.Entities.EventModel", b =>
                {
                    b.HasOne("aspdotnet_main_server.Entities.OrganizationModel", null)
                        .WithMany("Events")
                        .HasForeignKey("OrganizationModelId");
                });

            modelBuilder.Entity("aspdotnet_main_server.Entities.PrayerTimesModel", b =>
                {
                    b.HasOne("aspdotnet_main_server.Entities.OrganizationModel", null)
                        .WithMany("PrayerTimes")
                        .HasForeignKey("OrganizationModelId");
                });

            modelBuilder.Entity("aspdotnet_main_server.Entities.UserModel", b =>
                {
                    b.HasOne("aspdotnet_main_server.Entities.OrganizationModel", null)
                        .WithMany("Users")
                        .HasForeignKey("OrganizationModelId");
                });

            modelBuilder.Entity("aspdotnet_main_server.Entities.OrganizationModel", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("PrayerTimes");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
